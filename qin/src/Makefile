#############################################################################
# Makefile for building: qin
# Generated by qmake (2.01a) (Qt 4.7.1) on: Fri Dec 17 18:11:49 2010
# Project:  qin.pro
# Template: app
# Command: /usr/local/qt4/bin/qmake -o Makefile qin.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -g -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -g -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/qt4/mkspecs/qws/linux-x86-g++ -I. -I/usr/local/qt4/include/QtCore -I/usr/local/qt4/include/QtNetwork -I/usr/local/qt4/include/QtGui -I/usr/local/qt4/include/QtSql -I/usr/local/qt4/include -I. -Iplugins -I/usr/include/chewing -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/usr/local/qt4/lib
LIBS          = $(SUBLIBS)  -L/usr/local/qt4/lib -lchewing -lQtSql -L/usr/local/qt4/lib -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Qin.cpp \
		QinEngine.cpp \
		QinIMBases.cpp \
		QVirtualKeyboard.cpp \
		plugins/QinChewing.cpp \
		plugins/QinBoshiamy.cpp moc_QinEngine.cpp \
		moc_QVirtualKeyboard.cpp
OBJECTS       = Qin.o \
		QinEngine.o \
		QinIMBases.o \
		QVirtualKeyboard.o \
		QinChewing.o \
		QinBoshiamy.o \
		moc_QinEngine.o \
		moc_QVirtualKeyboard.o
DIST          = /usr/local/qt4/mkspecs/common/g++.conf \
		/usr/local/qt4/mkspecs/common/unix.conf \
		/usr/local/qt4/mkspecs/common/linux.conf \
		/usr/local/qt4/mkspecs/common/qws.conf \
		/usr/local/qt4/mkspecs/qconfig.pri \
		/usr/local/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/qt4/mkspecs/features/qt_functions.prf \
		/usr/local/qt4/mkspecs/features/qt_config.prf \
		/usr/local/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/local/qt4/mkspecs/features/default_pre.prf \
		/usr/local/qt4/mkspecs/features/release.prf \
		/usr/local/qt4/mkspecs/features/default_post.prf \
		/usr/local/qt4/mkspecs/features/warn_on.prf \
		/usr/local/qt4/mkspecs/features/qt.prf \
		/usr/local/qt4/mkspecs/features/unix/thread.prf \
		/usr/local/qt4/mkspecs/features/moc.prf \
		/usr/local/qt4/mkspecs/features/resources.prf \
		/usr/local/qt4/mkspecs/features/uic.prf \
		/usr/local/qt4/mkspecs/features/yacc.prf \
		/usr/local/qt4/mkspecs/features/lex.prf \
		/usr/local/qt4/mkspecs/features/include_source_dir.prf \
		qin.pro
QMAKE_TARGET  = qin
DESTDIR       = 
TARGET        = qin

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_QVirtualKeyboard.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: qin.pro  /usr/local/qt4/mkspecs/qws/linux-x86-g++/qmake.conf /usr/local/qt4/mkspecs/common/g++.conf \
		/usr/local/qt4/mkspecs/common/unix.conf \
		/usr/local/qt4/mkspecs/common/linux.conf \
		/usr/local/qt4/mkspecs/common/qws.conf \
		/usr/local/qt4/mkspecs/qconfig.pri \
		/usr/local/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/qt4/mkspecs/features/qt_functions.prf \
		/usr/local/qt4/mkspecs/features/qt_config.prf \
		/usr/local/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/local/qt4/mkspecs/features/default_pre.prf \
		/usr/local/qt4/mkspecs/features/release.prf \
		/usr/local/qt4/mkspecs/features/default_post.prf \
		/usr/local/qt4/mkspecs/features/warn_on.prf \
		/usr/local/qt4/mkspecs/features/qt.prf \
		/usr/local/qt4/mkspecs/features/unix/thread.prf \
		/usr/local/qt4/mkspecs/features/moc.prf \
		/usr/local/qt4/mkspecs/features/resources.prf \
		/usr/local/qt4/mkspecs/features/uic.prf \
		/usr/local/qt4/mkspecs/features/yacc.prf \
		/usr/local/qt4/mkspecs/features/lex.prf \
		/usr/local/qt4/mkspecs/features/include_source_dir.prf \
		/usr/local/qt4/lib/libQtSql.prl \
		/usr/local/qt4/lib/libQtCore.prl \
		/usr/local/qt4/lib/libQtGui.prl \
		/usr/local/qt4/lib/libQtNetwork.prl
	$(QMAKE) -o Makefile qin.pro
/usr/local/qt4/mkspecs/common/g++.conf:
/usr/local/qt4/mkspecs/common/unix.conf:
/usr/local/qt4/mkspecs/common/linux.conf:
/usr/local/qt4/mkspecs/common/qws.conf:
/usr/local/qt4/mkspecs/qconfig.pri:
/usr/local/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/local/qt4/mkspecs/features/qt_functions.prf:
/usr/local/qt4/mkspecs/features/qt_config.prf:
/usr/local/qt4/mkspecs/features/exclusive_builds.prf:
/usr/local/qt4/mkspecs/features/default_pre.prf:
/usr/local/qt4/mkspecs/features/release.prf:
/usr/local/qt4/mkspecs/features/default_post.prf:
/usr/local/qt4/mkspecs/features/warn_on.prf:
/usr/local/qt4/mkspecs/features/qt.prf:
/usr/local/qt4/mkspecs/features/unix/thread.prf:
/usr/local/qt4/mkspecs/features/moc.prf:
/usr/local/qt4/mkspecs/features/resources.prf:
/usr/local/qt4/mkspecs/features/uic.prf:
/usr/local/qt4/mkspecs/features/yacc.prf:
/usr/local/qt4/mkspecs/features/lex.prf:
/usr/local/qt4/mkspecs/features/include_source_dir.prf:
/usr/local/qt4/lib/libQtSql.prl:
/usr/local/qt4/lib/libQtCore.prl:
/usr/local/qt4/lib/libQtGui.prl:
/usr/local/qt4/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile qin.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qin1.0.0 || $(MKDIR) .tmp/qin1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qin1.0.0/ && $(COPY_FILE) --parents QinEngine.h QinIMBases.h QVirtualKeyboard.h plugins/QinChewing.h plugins/QinBoshiamy.h .tmp/qin1.0.0/ && $(COPY_FILE) --parents Qin.cpp QinEngine.cpp QinIMBases.cpp QVirtualKeyboard.cpp plugins/QinChewing.cpp plugins/QinBoshiamy.cpp .tmp/qin1.0.0/ && $(COPY_FILE) --parents QVirtualKeyboard.ui .tmp/qin1.0.0/ && (cd `dirname .tmp/qin1.0.0` && $(TAR) qin1.0.0.tar qin1.0.0 && $(COMPRESS) qin1.0.0.tar) && $(MOVE) `dirname .tmp/qin1.0.0`/qin1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qin1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_QinEngine.cpp moc_QVirtualKeyboard.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_QinEngine.cpp moc_QVirtualKeyboard.cpp
moc_QinEngine.cpp: QVirtualKeyboard.h \
		ui_QVirtualKeyboard.h \
		QinEngine.h \
		QinIMBases.h \
		QinEngine.h
	/usr/local/qt4/bin/moc $(DEFINES) $(INCPATH) QinEngine.h -o moc_QinEngine.cpp

moc_QVirtualKeyboard.cpp: ui_QVirtualKeyboard.h \
		QinEngine.h \
		QVirtualKeyboard.h \
		QinIMBases.h \
		QVirtualKeyboard.h
	/usr/local/qt4/bin/moc $(DEFINES) $(INCPATH) QVirtualKeyboard.h -o moc_QVirtualKeyboard.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_QVirtualKeyboard.h
compiler_uic_clean:
	-$(DEL_FILE) ui_QVirtualKeyboard.h
ui_QVirtualKeyboard.h: QVirtualKeyboard.ui
	/usr/local/qt4/bin/uic QVirtualKeyboard.ui -o ui_QVirtualKeyboard.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

Qin.o: Qin.cpp QinEngine.h \
		QVirtualKeyboard.h \
		ui_QVirtualKeyboard.h \
		QinIMBases.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Qin.o Qin.cpp

QinEngine.o: QinEngine.cpp QinEngine.h \
		QVirtualKeyboard.h \
		ui_QVirtualKeyboard.h \
		QinIMBases.h \
		plugins/QinChewing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QinEngine.o QinEngine.cpp

QinIMBases.o: QinIMBases.cpp QinIMBases.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QinIMBases.o QinIMBases.cpp

QVirtualKeyboard.o: QVirtualKeyboard.cpp QVirtualKeyboard.h \
		ui_QVirtualKeyboard.h \
		QinEngine.h \
		QinIMBases.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QVirtualKeyboard.o QVirtualKeyboard.cpp

QinChewing.o: plugins/QinChewing.cpp plugins/QinChewing.h \
		QinIMBases.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QinChewing.o plugins/QinChewing.cpp

QinBoshiamy.o: plugins/QinBoshiamy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QinBoshiamy.o plugins/QinBoshiamy.cpp

moc_QinEngine.o: moc_QinEngine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QinEngine.o moc_QinEngine.cpp

moc_QVirtualKeyboard.o: moc_QVirtualKeyboard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QVirtualKeyboard.o moc_QVirtualKeyboard.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

